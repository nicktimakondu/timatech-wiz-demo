name: Docker Build/Scan/Push

on:
  push:
    branches:
      - deploy


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# Trigger push
jobs:
  Build-Scan-Push:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      id-token: write
      contents: read

    env:
      IMAGE_REPO: ${{ secrets.DOCKER_USERNAME }}/timatech
      WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
      WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}
      WIZ_POLICY: "Default vulnerabilities policy"
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Image Tag
        id: tag
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build the latest Docker image
        run: docker build -t ${IMAGE_REPO}:${{ steps.tag.outputs.sha_short }} .

      # - name: Download Wiz CLI
      #   run: curl -o wizcli https://wizcli.app.wiz.io/latest/wizcli && chmod +x wizcli

      # - name: Authenticate to Wiz
      #   run: sudo -E ./wizcli auth --id "$WIZ_CLIENT_ID" --secret "$WIZ_CLIENT_SECRET"

      # - name: Run Wiz CLI image scan
      #   id: scan
      #   run: |-
      #     sudo -E ./wizcli docker scan -i ${IMAGE_REPO}:${{ steps.tag.outputs.sha_short }} --policy "$WIZ_POLICY" --policy-hits-only \
      #     --driver mountWithLayers --dockerfile "./Dockerfile" --output wiz-output.json,sarif,true --tag github_action_run_id=${{ github.run_id }}
      #   continue-on-error: true

      # - name: Upload SARIF file
      #   uses: github/codeql-action/upload-sarif@v3
      #   with:
      #     sarif_file: wiz-output.json
      #     category: wiz

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push the latest Docker image
        run: docker push ${IMAGE_REPO}:${{ steps.tag.outputs.sha_short }}

      # - name: Run Wiz CLI image tag
      #   run: sudo -E ./wizcli docker tag -i ${IMAGE_REPO}:${IMAGE_TAG}

      # - name: 'Authenticate to Google Cloud'
      #   id: 'gcpauth'
      #   uses: 'google-github-actions/auth@v1'
      #   with:
      #     create_credentials_file: true
      #     workload_identity_provider: 
